package com.capg;

import javax.persistence.*;
import java.util.List;

public class AuthorMain {
	
    EntityManagerFactory emf;

    public static void main(String[] args) {
    	AuthorMain object = new  AuthorMain();
        object.execute();
    }

    void execute() {
        //entity manager factory created
        emf = Persistence.createEntityManagerFactory("author-app");
       
        Author author = createAuthor();
        int id = author.getAuthorId();
        
        Author author1 = findAuthorById(id);
        print(author1);

        author1.setPhoneNo("9762612127");
        Author author2 = updateAuthor(author1);
       print(author2);

        List<Author> authors=findAllAuthors();

        removeAuthorById(id); 
        System.out.println("printing all authors");
        print(authors);
        emf.close();
    }

    void print(Author  author)
    {
        System.out.println("Author id= "+author.getAuthorId());
        System.out.println("Author Name= "+author.getFirstName()+" "+author.getMiddleName()+" "+author.getLastName());
       System.out.println("Author PhoneNo= "+author.getPhoneNo()); 

    }
    void print(List<Author> authors)
    {
        for (Author author:authors){
            print(author);
        }
    }

      Author findAuthorById(int authorId) {
        EntityManager em = emf.createEntityManager();
        EntityTransaction transaction = em.getTransaction();
        transaction.begin();
        Author author = em.find(Author.class,authorId); //find(entity class name, primary key),method or api of entity manager 
        transaction.commit();
        em.close();
        return author;
    }

    List<Author> findAllAuthors(){
        EntityManager em = emf.createEntityManager();
        EntityTransaction transaction = em.getTransaction();
        transaction.begin();
        Query query =em.createQuery("from Author"); // this will gives list of authors,it  is jpa query language
        List<Author> authors=query.getResultList();
        return authors;
    }

    Author updateAuthor(Author author){
        EntityManager em = emf.createEntityManager();
        EntityTransaction transaction = em.getTransaction();
        transaction.begin();
        author = em.merge(author) ; //em.merge(entityobject)-> it checks if record exists by seeing the id
        transaction.commit();
        em.close();
        return author;
    }

    void removeAuthorById(int authorId){
        EntityManager em = emf.createEntityManager();
        EntityTransaction transaction = em.getTransaction();
        transaction.begin();
        Author author = em.find(Author.class, authorId);
        em.remove(author);
        transaction.commit();
        em.close();
        System.out.println("author removed with id="+authorId);
    }


      Author createAuthor() {
    	  
        //creating entity manager, entity manager contains api for managing entities
        EntityManager em = emf.createEntityManager();
      
        //starting transaction
        EntityTransaction transaction = em.getTransaction();
        transaction.begin();
        Author author = new Author();
		//we did not set id manually because it will be automatically generated by @GeneratedValue 
        
        author.setFirstName("J.");
        author.setMiddleName("K.");
        author.setLastName("Rowling");

       // method or api of entity manager,this will insert record in the table
        em.persist(author);  
        
        //committing transaction after operations
        transaction.commit();

        System.out.println("Added author with id= " +author.getAuthorId());
        
        // closing entity manager after operation
        em.close();
        return author;
    }
}